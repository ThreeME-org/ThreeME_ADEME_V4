---
title: "Cahier de variantes ThreeME"
author: "ThreeME team"
format: 
 revealjs:
  center: true
  navigation-mode: linear
  theme: [simple, www/presentation.scss]
  width: 1200
  height: 700
subtitle: "`r paste0(params$country_name)`"
params:
  project_name: "standard_shocks"
  startyear: 2020
  endyear: 2050
  shockyear: 2021
  classification: "c29_s33"
  template_default: ofce
  color_theme: "SAND"
  country_name: "France"
  language: "fr"
number-sections: true
---

```{r}
#| label: setup
#| include: false

#Simulated shocks
#c("ct1","expg1","exr10","ff10","inct1","rrsc1","vat1","wd1","prode10","prodk10","prodl10","tpf10")

knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  results = "hide"
)

```


```{r Plots default options}

startyear <- params$startyear
endyear <- params$endyear
shockyear <- params$shockyear
scenario_name <- params$scenario_name
classification <- params$classification
template_default <- params$template_default
project_name <- params$project_name
color_theme <- params$color_theme
country_name <- params$country_name
language <- params$language


```

```{r Required packages, message=FALSE, warning=FALSE}
# Load functions
source("src/functions.R")

```

```{r load data and bridges}

variables_to_keep <- c("RCO2TAX_VOL","GDP","LF", "CH", "I", "X", "M", "PVA", "PCH", "PY", "PX", "PM", "DISPINC_AT_VAL", "W", "RSAV_H_VAL","F_L", "RBAL_TRADE_VAL", "RBAL_G_TOT_VAL", "MARKUP", "UNR","EMS","RSAV_G_VAL","RBAL_G_PRIM_VAL","BAL_TRADE","C_L","VA")

output <- readRDS(file = file.path("data","output",paste0(project_name,".rds"))) %>%
  pivot_longer(c(-variable,-year,-baseline,-sector,-commodity),names_to = "alternative",values_to = "shock") %>%
  filter(variable %in% variables_to_keep) %>% 
  select(-sector,-commodity)

```

```{r set properties}

#Set font
# windowsFonts(Arial=windowsFont("Arial"))

#Number of digits desired for the results (table)
digits_numb = 1

#Define palettes
color_themes = c("SAND", "ROSE")
lines = list(c("#00496FFF","#BF812DFF","#0F85A0FF","#7D4F73FF","#87AFD1FF"), #SAND
             c("#C70E7BFF","#FC6882FF","#DE1F6CFF","#C00559FF","#C86C7CFF")  #ROSE
               ) #enter at least five colors

background = c("#CB9060FF", #SAND
               "#EE4C97FF"  #ROSE
         )

text = c("black", #SAND
         "white"  #ROSE
         )

x = match(color_theme,color_themes)

#Set table colors
table_body = "white"
table_header = background[x]
table_footer = background[x]
table_header_text = text[x]
table_footer_text = text[x]
table_body_text = "black"

#Set table borderline colors
border_inner_header = "black"
border_inner_body = "grey83"
border_outer_all = "black"

#Set graphics colors
plot_header = background[x]
plot_header_text = text[x]
lines_palette = lines[[x]] 

```


```{r Data processing - tables}

#Number of flextable columns
col_numb = 8

#Years selected for the macroeconomic result tables
time.horizon <- c(0,1,5,10,20, endyear - shockyear)
years_ret <- c(rep(shockyear, length(time.horizon))) + time.horizon
label_period = trad(c("t", "t+1","t+5","t+10","t+20","Long term"))
replacement_vector_time <- label_period %>% set_names(years_ret)

#Footnotes
footnote = paste(paste0("% : ",trad("relative variation")),paste0("\U0394 : ",trad("absolute variation (compared to baseline)")),sep = ", ")
footnote_baseline = paste(paste0("% : ",trad("in percentage")),paste0("\U2197 : ",trad("annual growth rate")," (",trad("in %"),")"),paste0("tâ‚€=1 : ",trad("index (start year = 1)")),sep = ", ")

#Calculate new indicators from existing variables
variables_selection = c("C_L","F_L","PVA","VA")
indicators_data <- output %>% filter(variable %in% variables_selection) %>% pivot_wider(id_cols = c(year,alternative), names_from = variable,names_sep = ".",values_from = all_of(c("baseline","shock"))) %>% as.data.frame()

new_indicators_list <- purrr::set_names(c("baseline","shock")) %>% purrr::map(~indicators_data %>% select(year, alternative, starts_with(paste0(.x,"."))) %>% rename_all(~str_remove(.x,"^.+\\."))) %>%
  map(~.x %>% 
        mutate(
          SHARE_SALARIES = C_L*F_L/(PVA*VA) #Insert the new indicators here
          )) %>% 
  imap(~.x %>% pivot_longer(cols = !c(year,alternative), names_to = "variable") %>% rename(`:=`(!!.y, value))) 

new_indicators <- new_indicators_list %>% reduce(full_join, by = c("year","alternative" ,"variable")) %>% arrange(variable) %>% as.data.frame() %>% filter(variable == "SHARE_SALARIES")
output <- rbind(output,new_indicators)
output <- unique(output)

#Variables to calculate in relative difference from the baseline (flextable_data_a)
label_variable = c("F_L","LF","EMS","PVA","PCH","PY","PX","DISPINC_AT_VAL","BAL_TRADE")
label_name = trad(c("Employment","Active population","GHG emissions", "Price of VA", "Consumption price", "Production price", "Export price", "Household disposable income","Trade balance"))
replacement_vector <- label_name %>% set_names(label_variable)

label_variable_two = c("I", "X","W")
label_name_two = trad(c("Investment", "Exports", "Nominal wages"))
replacement_vector_two <- label_name_two %>% set_names(label_variable_two)

#Variables to calculate in absolute difference from the baseline (flextable_data_b)
label_variable_three <- c("F_L","RBAL_TRADE_VAL","RSAV_H_VAL","UNR","RSAV_G_VAL","RBAL_G_PRIM_VAL","SHARE_SALARIES")
label_name_three = c(trad("Employment in thousands"),paste0(trad("Trade balance")," (",trad("in %"),")"), paste0(trad("Household saving rate")," (",trad("in %"),")"), paste0(trad("Unemployment rate")," (",trad("in %"),")"),paste0(trad("Gouvernment saving rate")," (",trad("in GDP points"),")"),paste0(trad("Government primary balance")," (",trad("in GDP points"),")"),paste0(trad("Labor share into VA")," (",trad("in %"),")"))
replacement_vector_three <- label_name_three %>% set_names(label_variable_three)

#Variables for the baseline table (flextable_data_baseline_b)
label_variable_four = c("RSAV_H_VAL","UNR","RSAV_G_VAL","RBAL_TRADE_VAL","RBAL_G_PRIM_VAL")
label_name_four = trad(c("Household saving rate", "Unemployment rate","Gouvernment saving rate","Trade balance","Government primary balance"))
replacement_vector_four <- label_name_four %>% set_names(label_variable_four)

#Set the order of the variables in the result table
ordre = c(trad(c("GDP","Active population","GHG emissions","Employment","Employment in thousands")),paste0(trad("Unemployment rate")," (",trad("in %"),")"),trad("Unemployment rate"), paste0(trad("Labor share into VA")," (",trad("in %"),")"),trad(c("Nominal wages","Household disposable income","Household consumption", "Investment", "Exports", "Imports", "Price of VA", "Consumption price", "Production price", "Export price", "Import price")),paste0(trad("Household saving rate")," (",trad("in %"),")"),trad("Household saving rate"), paste0(trad("Gouvernment saving rate")," (",trad("in GDP points"),")"),paste0(trad("Trade balance")," (",trad("in %"),")"),trad(c("Trade balance","Government primary balance")),paste0(trad("Government primary balance")," (",trad("in GDP points"),")"))

#Create the result dataframe for shocks before transforming it into a flextable
flextable_data_a <- output %>% filter(variable %in% c("GDP","F_L","LF","PVA", "PCH", "PY", "PX", "DISPINC_AT_VAL","EMS","I","X","W","CH","PM","M")) %>% mutate(value = round((shock/baseline-1)*100,digits = digits_numb), variable = str_replace_all(variable,replacement_vector),variable=str_replace_all(variable,"CH",trad("Household consumption")),variable = str_replace_all(variable,replacement_vector_two),variable=str_replace_all(variable,"PM",trad("Import price")),variable=str_replace_all(variable,"M",trad("Imports")),variable=str_replace_all(variable,"GDP",trad("GDP")), unit = "%")

flextable_data_b <- output %>% filter(variable %in% c("F_L")) %>% mutate(value = round(shock - baseline,digits = digits_numb),variable = str_replace_all(variable,replacement_vector_three), unit = "\U0394")

flextable_data_b_percentage <- output %>% filter(variable %in% c("RSAV_H_VAL","UNR","RBAL_TRADE_VAL","RBAL_G_PRIM_VAL","RSAV_G_VAL","RSP","SHARE_SALARIES")) %>% mutate(value = round((shock - baseline)*100, digits = digits_numb),variable = str_replace_all(variable,replacement_vector_three),unit = "\U0394")

flextable_data <- rbind(flextable_data_a,flextable_data_b,flextable_data_b_percentage) %>% 
  filter(year %in% years_ret) %>% 
  mutate(year = str_replace_all(year,replacement_vector_time)) %>% 
  select(Variable = variable,year,value,alternative," " = unit) %>% 
  pivot_wider(names_from = year, values_from = value)

#Create the result dataframe for the baseline before transforming it into a flextable
flextable_data_baseline_a <- output %>% filter(alternative == "ct1",variable %in% c("GDP","F_L","LF","PVA", "PCH", "PY", "PX", "DISPINC_AT_VAL","I","X","W","CH","PM","M")) %>% 
  select(-shock,-alternative) %>% mutate(lag_baseline = dplyr::lag(baseline),value = round((baseline/lag_baseline - 1)*100,digits = digits_numb)) %>% filter(year %in% years_ret) %>% mutate(year = str_replace_all(year,replacement_vector_time),variable = str_replace_all(variable,replacement_vector),variable=str_replace_all(variable,"CH",trad("Household consumption")),variable = str_replace_all(variable,replacement_vector_two),variable=str_replace_all(variable,"PM",trad("Import price")),variable=str_replace_all(variable,"GDP",trad("GDP")),Variable=str_replace_all(variable,"M",trad("Imports")), unit = "\U2197") %>% 
  select(-baseline,-lag_baseline," " = unit) %>% 
  pivot_wider(names_from = year, values_from = value) %>% 
  select(-variable)

flextable_data_baseline_b <- output %>% filter(alternative == "ct1",year %in% years_ret,variable %in% c("RSAV_H_VAL","RSAV_G_VAL","UNR","RBAL_TRADE_VAL","RBAL_G_PRIM_VAL")) %>% 
  select(-shock,-alternative) %>% mutate(value = round(baseline*100,digits=digits_numb),year = str_replace_all(year,replacement_vector_time),Variable = str_replace_all(variable,replacement_vector_four), unit = "%") %>% 
  select(-baseline," " = unit) %>% 
  pivot_wider(names_from = year, values_from = value) %>% 
  select(-variable)

flextable_data_baseline_c <- output %>% filter(alternative == "ct1",year %in% years_ret,variable %in% c("EMS","GDP")) %>% 
  select(-shock,-alternative) %>%
  group_by(variable) %>%
  mutate(value = round(baseline/baseline[which(year == shockyear)],digits = digits_numb)) %>% 
  ungroup() %>%
  mutate(year = str_replace_all(year,replacement_vector_time),Variable = str_replace_all(variable,replacement_vector), unit = "tâ‚€=1") %>%
  select(-baseline," " = unit) %>% 
  pivot_wider(names_from = year, values_from = value) %>% 
  select(-variable)

flextable_data_baseline <- rbind(flextable_data_baseline_a,flextable_data_baseline_b) %>% 
  arrange(factor(Variable, levels = ordre)) %>% rbind(flextable_data_baseline_c)

#Clean the environment
rm(flextable_data_a,flextable_data_b,flextable_data_b_percentage,flextable_data_baseline_a,flextable_data_baseline_b)

```

# `r "Simulated shocks" %>% trad()`

## `r "Alternatives" %>% trad()`{.smaller}

* **`r "Shocks on public expenditure and taxes" %>% trad()`**

  * `r "Increase in public expenditure by 1% of GDP" %>% trad() %>% paste("(EXPG1)")`
  * `r "Reduction of employers' social contributions by 1% of ex ante GDP" %>% trad() %>% paste("(RRSC1)")`
  * `r "VAT reduction by 1% of ex ante GDP" %>% trad() %>% paste("(VAT1)")`
  * `r "Household income tax cut by 1% of ex ante GDP" %>% trad() %>% paste("(INCT1)")`

* **`r "Shocks on external trade" %>% trad()`**

  * `r "Permanent depreciation of 10% of the euro" %>% trad() %>% paste("(EXR10)")`
  * `r "Permanent increase of 1% in global demand to" %>% trad() %>% paste(country_name, "(WD1)")`

* **`r "Shocks on fossil fuel price" %>% trad()`**

  * `r "Increase in fossil fuel prices by 10%" %>% trad() %>% paste("(FF10)")`
  * `r "Increase in carbon tax by 1% of GDP" %>% trad() %>% paste("(CT1)")`

* **`r "Increase in productivity by 10%" %>% trad()`**

  * `r "Capital productivity" %>% trad() %>% paste("(PRODK10)")`
  * `r "Energy productivity" %>% trad() %>% paste("(PRODE10)")`
  * `r "Labor productivity" %>% trad() %>% paste("(PRODL10)")`
  * `r "Total productivity" %>% trad() %>% paste("(TPF10)")`

# `r "Macroeconomic results" %>% trad()`

## `r "Increase in public expenditure by 1% of GDP" %>% trad() %>% paste("(EXPG1)")`

```{r}
#| label: tbl-macro-9
#| tbl-cap: Table macro PRODK10
#| results: asis

name = "expg1"
flextable_data_expg1 <- flextable_data %>% filter(alternative == name) %>% select(-alternative) %>% arrange(factor(Variable, levels = ordre))

table_macro_EXPG1 <- flextable::flextable(data = flextable_data_expg1) %>%
add_header_row(values = c(trad("ThreeME model"),paste(trad("Standard shock:"),str_to_upper(name))),colwidths = c(1,7)) %>%
add_footer_lines(footnote) %>% 
  flextable_theme()

table_macro_EXPG1

```

## `r "Reduction of employers' social contributions by 1% of ex ante GDP" %>% trad() %>% paste("(RRSC1)")`

```{r}
#| results: asis


name = "rrsc1"
flextable_data_rrsc1 <- flextable_data %>% filter(alternative == name) %>% select(-alternative) %>% arrange(factor(Variable, levels = ordre))

table_macro_RRSC1 <- flextable::flextable(data = flextable_data_rrsc1) %>%
add_header_row(values = c(trad("ThreeME model"),paste(trad("Standard shock:"),str_to_upper(name))),colwidths = c(1,7)) %>%
add_footer_lines(footnote) %>% 
  flextable_theme()

table_macro_RRSC1
  
```

## `r "VAT reduction by 1% of ex ante GDP" %>% trad() %>% paste("(VAT1)")`

```{r}
#| results: asis

name = "vat1"
flextable_data_vat1 <- flextable_data %>% filter(alternative == name) %>% select(-alternative) %>% arrange(factor(Variable, levels = ordre))

table_macro_VAT1 <- flextable::flextable(data = flextable_data_vat1) %>%
add_header_row(values = c(trad("ThreeME model"),paste(trad("Standard shock:"),str_to_upper(name))),colwidths = c(1,7)) %>%
add_footer_lines(footnote) %>% 
  flextable_theme()

table_macro_VAT1

```

## `r "Household income tax cut by 1% of ex ante GDP" %>% trad() %>% paste("(INCT1)")`

```{r}
#| results: asis
#| 
name = "inct1"
flextable_data_inct1 <- flextable_data %>% filter(alternative == name) %>% select(-alternative) %>% arrange(factor(Variable, levels = ordre))

table_macro_INCT1 <- flextable::flextable(data = flextable_data_inct1) %>%
add_header_row(values = c(trad("ThreeME model"),paste(trad("Standard shock:"),str_to_upper(name))),colwidths = c(1,7)) %>%
add_footer_lines(footnote) %>% 
  flextable_theme()

table_macro_INCT1

```

## `r "Permanent depreciation of 10% of the euro" %>% trad() %>% paste("(EXR10)")`

```{r}
#| results: asis
#| 
name = "exr10"
flextable_data_exr10 <- flextable_data %>% filter(alternative == name) %>% select(-alternative) %>% arrange(factor(Variable, levels = ordre))
  
table_macro_EXR10 <- flextable::flextable(data = flextable_data_exr10) %>%
add_header_row(values = c(trad("ThreeME model"),paste(trad("Standard shock:"),str_to_upper(name))),colwidths = c(1,7)) %>%
add_footer_lines(footnote) %>% 
flextable_theme() 

table_macro_EXR10

```

## `r "Permanent increase of 1% in global demand to" %>% trad() %>% paste(country_name, "(WD1)")`

```{r}
#| results: asis
#| 
name = "wd1"
flextable_data_wd1 <- flextable_data %>% filter(alternative == name) %>% select(-alternative) %>% arrange(factor(Variable, levels = ordre))

table_macro_WD1 <- flextable::flextable(data = flextable_data_wd1) %>%
add_header_row(values = c(trad("ThreeME model"),paste(trad("Standard shock:"),str_to_upper(name))),colwidths = c(1,7)) %>%
add_footer_lines(footnote) %>% 
  flextable_theme()

table_macro_WD1

```

## `r "Increase in fossil fuel prices by 10%" %>% trad() %>% paste("(FF10)")`

```{r}
#| results: asis
#| 
name = "ff10"
flextable_data_ff10 <- flextable_data %>% filter(alternative == name) %>% select(-alternative) %>% arrange(factor(Variable, levels = ordre))

table_macro_FF10 <- flextable::flextable(data = flextable_data_ff10) %>%
add_header_row(values = c(trad("ThreeME model"),paste(trad("Standard shock:"),str_to_upper(name))),colwidths = c(1,7)) %>%
add_footer_lines(footnote) %>% 
  flextable_theme()

table_macro_FF10

```

## `r "Increase in carbon tax by 1% of GDP" %>% trad() %>% paste("(CT1)")`

```{r}
#| results: asis
#| 
name = "ct1"
flextable_data_ct1 <- flextable_data %>% filter(alternative == name) %>% select(-alternative) %>% arrange(factor(Variable, levels = ordre))

table_macro_CT1 <- flextable::flextable(data = flextable_data_ct1) %>%
add_header_row(values = c(trad("ThreeME model"),paste(trad("Standard shock:"),str_to_upper(name))),colwidths = c(1,7)) %>%
add_footer_lines(footnote) %>% 
flextable_theme()

table_macro_CT1

```

## `r "Increase in capital productivity by 10%" %>% trad() %>% paste("(PRODK10)")`

```{r}
#| results: asis
#| 
name = "prodk10"
flextable_data_prodk10 <- flextable_data %>% filter(alternative == name) %>% select(-alternative) %>% arrange(factor(Variable, levels = ordre))
  
table_macro_PRODK10 <- flextable::flextable(data = flextable_data_prodk10) %>%
add_header_row(values = c(trad("ThreeME model"),paste(trad("Standard shock:"),str_to_upper(name))),colwidths = c(1,7)) %>%
add_footer_lines(footnote) %>% 
flextable_theme()

table_macro_PRODK10

```

## `r "Increase in energy productivity by 10%" %>% trad() %>% paste("(PRODE10)")`

```{r}
#| results: asis
#| 
name = "prode10"
flextable_data_prode10 <- flextable_data %>% filter(alternative == name) %>% select(-alternative) %>% arrange(factor(Variable, levels = ordre))
  
table_macro_PRODE10 <- flextable::flextable(data = flextable_data_prode10) %>%
add_header_row(values = c(trad("ThreeME model"),paste(trad("Standard shock:"),str_to_upper(name))),colwidths = c(1,7)) %>%
add_footer_lines(footnote) %>% 
flextable_theme()

table_macro_PRODE10

```

## `r "Increase in labor productivity by 10%" %>% trad() %>% paste("(PRODL10)")`

```{r}
#| results: asis


name = "prodl10"
flextable_data_prodl10 <- flextable_data %>% filter(alternative == name) %>% select(-alternative) %>% arrange(factor(Variable, levels = ordre))
  
table_macro_PRODL10 <- flextable::flextable(data = flextable_data_prodl10) %>%
add_header_row(values = c(trad("ThreeME model"),paste(trad("Standard shock:"),str_to_upper(name))),colwidths = c(1,7)) %>%
add_footer_lines(footnote) %>% 
flextable_theme()

table_macro_PRODL10

```

## `r "Increase in total productivity by 10%" %>% trad() %>% paste("(TPF10)")`

```{r}
#| results: asis


name = "tpf10"
flextable_data_tpf10 <- flextable_data %>% filter(alternative == name) %>% select(-alternative) %>% arrange(factor(Variable, levels = ordre))
  
table_macro_TPF10 <- flextable::flextable(data = flextable_data_tpf10) %>%
add_header_row(values = c(trad("ThreeME model"),paste(trad("Standard shock:"),str_to_upper(name))),colwidths = c(1,7)) %>%
add_footer_lines(footnote) %>% 
flextable_theme()

table_macro_TPF10

```

## `r "Baseline scenario" %>% trad()`

```{r}
#| results: asis
#| 
name = "baseline"

table_macro_baseline <- flextable::flextable(data = flextable_data_baseline) %>%
  add_header_row(values = c(trad("ThreeME model"),trad("Baseline scenario")),colwidths = c(1,7)) %>% 
  add_footer_lines(values = footnote_baseline) %>% 
  flextable_theme()

table_macro_baseline

```

# `r "Shock comparison" %>% trad()`

## `r "Shocks on public expenditure and taxes" %>% trad() %>% paste("(INCT1, EXPG1, RRSC1 & VAT1)")`

<center>
```{r Comparatif 1a, results ='asis',fig.align = 'center'}
label_macro = c(GDP = trad("GDP"), 
                CH = trad("Household consumption"), 
                I = trad("Investment"), 
                RBAL_TRADE_VAL = trad("Trade balance"))

alternatives_selected = c("inct1","expg1","rrsc1","vat1")
label_alternative = trad(c("Household income tax reduction","Public expenditure increase","Employers' social contribution reduction","Value-added tax reduction"))
replacement_vector <- label_alternative %>% set_names(alternatives_selected)
variables_g1 = c("GDP", "CH", "I", "RBAL_TRADE_VAL")
data_g1 <- output %>% filter(variable %in% variables_g1, alternative %in% alternatives_selected) %>% mutate(variation = (shock/baseline-1),variable= factor(variable,levels = c("GDP","CH","I","RBAL_TRADE_VAL")),alternative = factor(alternative, levels = c("inct1","expg1","rrsc1","vat1")),label = str_replace_all(alternative,replacement_vector),text=paste("<B>",str_to_upper(alternative),"</B>\n",trad("Year:"),year,"\n",trad("Variation:"),percent(variation,accuracy = 0.01)))

graphics_INCT1_EXPG1_RRSC1_VAT1_1 <- ggplot(data_g1, aes(x = year, y = variation)) + 
  geom_line(aes(color=label,group = 1,text = text),size = 0.5) +
  scale_colour_manual(values = lines_palette) + 
  labs(x="",y=paste0("% (",trad("in difference from baseline"),")"),color="") +
  theme(text = element_text(family = 'Arial',size = 12),
    axis.title.y = element_text(size = 10,margin = margin(t = 0, r = 10, b = 0, l = 0)),
         #legend.text = element_text(size = 10),
         legend.position="bottom",
         panel.grid = element_line(color = "grey88",size = 0.4,linetype = 1),
         panel.background=element_rect(fill="white"),
         panel.border = element_rect(linetype = 1, colour = "black",fill = NA,size = 0.7),
         strip.background =element_rect(fill= plot_header,colour = "black",size = 0.7),
         strip.text = element_text(colour = plot_header_text),
    panel.spacing.y = unit(2, "lines"),
  panel.spacing.x = unit(0.5, "lines")) +
  scale_y_continuous(labels = scales::label_percent(accuracy = 0.1)) + 
  facet_wrap(~variable,labeller = labeller(variable = label_macro), scales = "free") +
  scale_x_continuous(limits = c(startyear,endyear))

graphics_INCT1_EXPG1_RRSC1_VAT1_1_plotly <- plotly::ggplotly(graphics_INCT1_EXPG1_RRSC1_VAT1_1, tooltip = "text", dynamicTicks = FALSE,
               width = 875,
               height = 650
               ) %>% 
  layout(showlegend=TRUE,
         dragmode = TRUE,
         margin = list(t=65,r=0,l=100),
         legend = list(orientation = "h", x = 0, y = -0.1)
         #xaxis = list(),
         #yaxis = list()
         #hovermode = "x unified",
         #hoverlabel = list(bgcolor = "#FCF9F0FF", bordercolor = "#ECE5D3FF")
         ) %>% 
  config(displayModeBar=TRUE,displaylogo = FALSE)

graphics_INCT1_EXPG1_RRSC1_VAT1_1_plotly

```
</center>

## `r "Shocks on public expenditure and taxes" %>% trad() %>% paste("(INCT1, EXPG1, RRSC1 & VAT1)")`

<center>
```{r Comparatif 1b, results ='asis',fig.align = 'center'}
label_macro = c(PCH = trad("Consumption price"),
                PX = trad("Production price"),
                UNR = trad("Unemployment rate"),
                RBAL_G_PRIM_VAL = trad("Government primary balance"))

alternatives_selected = c("inct1","expg1","rrsc1","vat1")
label_alternative = trad(c("Household income tax reduction","Public expenditure increase","Employers' social contribution reduction","Value-added tax reduction"))
replacement_vector <- label_alternative %>% set_names(alternatives_selected)
variables_g1 = c("PCH", "PX")
variables_g2 = c("UNR", "RBAL_G_PRIM_VAL")
data_g1 <- output %>% filter(variable %in% variables_g1, alternative %in% alternatives_selected) %>% mutate(variation = (shock/baseline-1))
data_g2 <- output %>% filter(variable %in% variables_g2, alternative %in% alternatives_selected) %>% mutate(variation = (shock-baseline))
data_g  <- rbind(data_g1,data_g2) %>% mutate(variable= factor(variable,levels = c("PCH", "PX", "UNR", "RBAL_G_PRIM_VAL")),alternative = factor(alternative, levels = c("inct1","expg1","rrsc1","vat1")),label = str_replace_all(alternative,replacement_vector),text=paste("<B>",str_to_upper(alternative),"</B>\n",trad("Year:"),year,"\n",trad("Variation:"),percent(variation,accuracy = 0.01)))

graphics_INCT1_EXPG1_RRSC1_VAT1_2 <- ggplot(data_g, aes(x = year, y = variation)) + 
  geom_line(aes(color=label,group = 1,text = text),size = 0.5) +
  scale_colour_manual(values = lines_palette) + 
  labs(x="",y=paste0("% (",trad("in difference from baseline"),")"),color="") + 
  theme(text = element_text(family = 'Arial',size = 12),
    axis.title.y = element_text(size = 10,margin = margin(t = 0, r = 10, b = 0, l = 0)),
         #legend.text = element_text(size = 10),
         legend.position="bottom",
         panel.grid = element_line(color = "grey88",size = 0.4,linetype = 1),
         panel.background=element_rect(fill="white"),
         panel.border = element_rect(linetype = 1, colour = "black",fill = NA,size = 0.7),
        strip.background =element_rect(fill= plot_header,colour = "black",size = 0.7),
         strip.text = element_text(colour = plot_header_text),
         panel.spacing.y = unit(2, "lines"),
         panel.spacing.x = unit(0.5, "lines")
         ) + 
  scale_y_continuous(labels = scales::label_percent(accuracy = 0.1)) +
  facet_wrap(~variable,labeller = labeller(variable = label_macro), scales = "free") +
  scale_x_continuous(limits = c(startyear,endyear))

graphics_INCT1_EXPG1_RRSC1_VAT1_2_plotly <- plotly::ggplotly(graphics_INCT1_EXPG1_RRSC1_VAT1_2, tooltip = "text", dynamicTicks = FALSE,
               width = 875,
               height = 650
               ) %>% 
  layout(showlegend=TRUE,
         dragmode = TRUE,
         margin = list(t=65,r=0,l=100),
         legend = list(orientation = "h", x = 0, y = -0.1)
         #xaxis = list(),
         #yaxis = list()
         #hovermode = "x unified",
         #hoverlabel = list(bgcolor = "#FCF9F0FF", bordercolor = "#ECE5D3FF")
         ) %>% 
  config(displayModeBar=TRUE,displaylogo = FALSE)

graphics_INCT1_EXPG1_RRSC1_VAT1_2_plotly

```
</center>

## `r "Shocks on external trade" %>% trad() %>% paste("(EXR10 & WD1)")`

<center>
```{r Comparatif 4a, results ='asis',fig.align = 'center'}
label_macro = c(GDP = trad("GDP"), 
                CH = trad("Household consumption"), 
                I = trad("Investment"), 
                RBAL_TRADE_VAL = trad("Trade balance"))

alternatives_selected = c("wd1","exr10")
label_alternative = trad(c("World demand increase","Euro permanent depreciation"))
replacement_vector <- label_alternative %>% set_names(alternatives_selected)
variables_g1 = c("GDP", "CH", "I", "RBAL_TRADE_VAL")
data_g1 <- output %>% filter(variable %in% variables_g1, alternative %in% alternatives_selected) %>% mutate(variation = (shock/baseline-1),variable= factor(variable,levels = c("GDP","CH","I","RBAL_TRADE_VAL")),alternative = factor(alternative, levels = c("wd1","exr10")),label = str_replace_all(alternative,replacement_vector),text=paste("<B>",str_to_upper(alternative),"</B>\n",trad("Year:"),year,"\n",trad("Variation:"),percent(variation,accuracy = 0.01)))

#GDP (in difference from baseline)

graphics_EXR10_WD1_1 <- ggplot(data_g1, aes(x = year, y = variation)) + 
  geom_line(aes(color=label,group = 1,text = text),size = 0.5) +
  scale_colour_manual(values = lines_palette) +
  labs(x="",y=paste0("% (",trad("in difference from baseline"),")"),color="") + 
  theme(text = element_text(family = 'Arial',size = 12),
        axis.title.y = element_text(size = 10,margin = margin(t = 0, r = 10, b = 0, l = 0)),
        #legend.text = element_text(size = 9),
        legend.position="bottom",
        panel.grid = element_line(color = "grey88",size = 0.4,linetype = 1),
        panel.background=element_rect(fill="white"),
        panel.border = element_rect(linetype = 1, colour = "black",fill = NA,size = 0.7),
       strip.background =element_rect(fill= plot_header,colour = "black",size = 0.7),
        strip.text = element_text(colour = plot_header_text),
        panel.spacing.y = unit(2, "lines"),
        panel.spacing.x = unit(0.5, "lines")
        ) + 
  scale_y_continuous(labels = scales::label_percent(accuracy = 0.1)) +
  facet_wrap(~variable,labeller = labeller(variable = label_macro), scales = "free") + 
  scale_x_continuous(limits = c(startyear,endyear))

graphics_EXR10_WD1_1_plotly <- plotly::ggplotly(graphics_EXR10_WD1_1, tooltip = "text", dynamicTicks = FALSE,
               width = 875,
               height = 650
               ) %>% 
  layout(showlegend=TRUE,
         dragmode = TRUE,
         margin = list(t=65,r=0,l=100),
         legend = list(orientation = "h", x = 0, y = -0.1)
         #xaxis = list(),
         #yaxis = list()
         #hovermode = "x unified",
         #hoverlabel = list(bgcolor = "#FCF9F0FF", bordercolor = "#ECE5D3FF")
         ) %>% 
  config(displayModeBar=TRUE,displaylogo = FALSE)

graphics_EXR10_WD1_1_plotly

```
</center>

## `r "Shocks on external trade" %>% trad() %>% paste("(EXR10 & WD1)")`

<center>
```{r Comparatif 4b, results ='asis',fig.align = 'center'}
label_macro = c(PCH = trad("Consumption price"),
                PX = trad("Production price"),
                UNR = trad("Unemployment rate"),
                RBAL_G_PRIM_VAL = trad("Government primary balance"))

alternatives_selected = c("wd1","exr10")
label_alternative = trad(c("World demand increase","Euro permanent depreciation"))
replacement_vector <- label_alternative %>% set_names(alternatives_selected)
variables_g1 = c("PCH", "PX")
variables_g2 = c("UNR", "RBAL_G_PRIM_VAL")
data_g1 <- output %>% filter(variable %in% variables_g1, alternative %in% alternatives_selected) %>% mutate(variation = (shock/baseline-1))
data_g2 <- output %>% filter(variable %in% variables_g2, alternative %in% alternatives_selected) %>% mutate(variation = (shock-baseline))
data_g  <- rbind(data_g1,data_g2) %>% mutate(variable= factor(variable,levels = c("PCH", "PX", "UNR", "RBAL_G_PRIM_VAL")),alternative = factor(alternative, levels = c("wd1","exr10")),label = str_replace_all(alternative,replacement_vector),text=paste("<B>",str_to_upper(alternative),"</B>\n",trad("Year:"),year,"\n",trad("Variation:"),percent(variation,accuracy = 0.01)))

graphics_EXR10_WD1_2 <- ggplot(data_g, aes(x = year, y = variation)) + 
  geom_line(aes(color=label,group = 1,text = text),size = 0.5) +
  scale_colour_manual(values = lines_palette) +
  labs(x="",y=paste0("% (",trad("in difference from baseline"),")"),color="") + 
  theme(text = element_text(family = 'Arial',size = 12),
        axis.title.y = element_text(size = 10,margin = margin(t = 0, r = 10, b = 0, l = 0)),
        #legend.text = element_text(size = 9),
        legend.position="bottom",
        panel.grid = element_line(color = "grey88",size = 0.4,linetype = 1),
        panel.background=element_rect(fill="white"),
        panel.border = element_rect(linetype = 1, colour = "black",fill = NA,size = 0.7),
       strip.background =element_rect(fill= plot_header,colour = "black",size = 0.7),
        strip.text = element_text(colour = plot_header_text),
        panel.spacing.y = unit(2, "lines"),
        panel.spacing.x = unit(0.5, "lines")
        ) + 
  scale_y_continuous(labels = scales::label_percent(accuracy = 0.1)) +
  facet_wrap(~variable,labeller = labeller(variable = label_macro), scales = "free") + 
  scale_x_continuous(limits = c(startyear,endyear))

graphics_EXR10_WD1_2_plotly <- plotly::ggplotly(graphics_EXR10_WD1_2, tooltip = "text", dynamicTicks = FALSE,
               width = 875,
               height = 650
               ) %>% 
  layout(showlegend=TRUE,
         dragmode = TRUE,
         margin = list(t=65,r=0,l=100),
         legend = list(orientation = "h", x = 0, y = -0.1)
         #xaxis = list(),
         #yaxis = list()
         #hovermode = "x unified",
         #hoverlabel = list(bgcolor = "#FCF9F0FF", bordercolor = "#ECE5D3FF")
         ) %>% 
  config(displayModeBar=TRUE,displaylogo = FALSE)

graphics_EXR10_WD1_2_plotly

```
</center>

## `r "Shocks on fossil fuel price" %>% trad() %>% paste("(FF10 & CT1)")`

<center>
```{r Comparatif 3a, results ='asis',fig.align = 'center'}
label_macro = c(GDP = trad("GDP"), 
                CH = trad("Household consumption"), 
                I = trad("Investment"), 
                RBAL_TRADE_VAL = trad("Trade balance"))

alternatives_selected = c("ff10","ct1")
label_alternative = trad(c("Fossil fuels price increase","Carbon tax increase"))
replacement_vector <- label_alternative %>% set_names(alternatives_selected)
variables_g1 = c("GDP", "CH", "I", "RBAL_TRADE_VAL")
data_g1 <- output %>% filter(variable %in% variables_g1, alternative %in% alternatives_selected) %>% mutate(variation = (shock/baseline-1),variable= factor(variable,levels = c("GDP","CH","I","RBAL_TRADE_VAL")),alternative = factor(alternative, levels = c("ff10","ct1")),label = str_replace_all(alternative,replacement_vector),text=paste("<B>",str_to_upper(alternative),"</B>\n",trad("Year:"),year,"\n",trad("Variation:"),percent(variation,accuracy = 0.01)))

#GDP (in difference from baseline)

graphics_FF10_CT1_1 <- ggplot(data_g1, aes(x = year, y = variation)) + 
  geom_line(aes(color=label,group = 1,text = text),size = 0.5) +
  scale_colour_manual(values = lines_palette) +
  labs(x="",y=paste0("% (",trad("in difference from baseline"),")"),color="") + 
  theme(text = element_text(family = 'Arial',size = 12),
        axis.title.y = element_text(size = 10,margin = margin(t = 0, r = 10, b = 0, l = 0)),
        #legend.text = element_text(size = 9),
        legend.position="bottom",
        panel.grid = element_line(color = "grey88",size = 0.4,linetype = 1),
        panel.background=element_rect(fill="white"),
        panel.border = element_rect(linetype = 1, colour = "black",fill = NA,size = 0.7),
       strip.background =element_rect(fill= plot_header,colour = "black",size = 0.7),
        strip.text = element_text(colour = plot_header_text),
        panel.spacing.y = unit(2, "lines"),
        panel.spacing.x = unit(0.5, "lines")
        ) + 
  scale_y_continuous(labels = scales::label_percent(accuracy = 0.1)) +
  facet_wrap(~variable,labeller = labeller(variable = label_macro), scales = "free") + 
  scale_x_continuous(limits = c(startyear,endyear))

graphics_FF10_CT1_1_plotly <- plotly::ggplotly(graphics_FF10_CT1_1, tooltip = "text", dynamicTicks = FALSE,
               width = 875,
               height = 650
               ) %>% 
  layout(showlegend=TRUE,
         dragmode = TRUE,
         margin = list(t=65,r=0,l=100),
         legend = list(orientation = "h", x = 0, y = -0.1)
         #xaxis = list(),
         #yaxis = list()
         #hovermode = "x unified",
         #hoverlabel = list(bgcolor = "#FCF9F0FF", bordercolor = "#ECE5D3FF")
         ) %>% 
  config(displayModeBar=TRUE,displaylogo = FALSE)

graphics_FF10_CT1_1_plotly

```
</center>

## `r "Shocks on fossil fuel price" %>% trad() %>% paste("(FF10 & CT1)")`

<center>
```{r Comparatif 3b, results ='asis',fig.align = 'center'}
label_macro = c(PCH = trad("Consumption price"),
                PX = trad("Production price"),
                UNR = trad("Unemployment rate"),
                RBAL_G_PRIM_VAL = trad("Government primary balance"))

alternatives_selected = c("ff10","ct1")
label_alternative = trad(c("Fossil fuels price increase","Carbon tax increase"))
replacement_vector <- label_alternative %>% set_names(alternatives_selected)
variables_g1 = c("PCH", "PX")
variables_g2 = c("UNR", "RBAL_G_PRIM_VAL")
data_g1 <- output %>% filter(variable %in% variables_g1, alternative %in% alternatives_selected) %>% mutate(variation = (shock/baseline-1))
data_g2 <- output %>% filter(variable %in% variables_g2, alternative %in% alternatives_selected) %>% mutate(variation = (shock-baseline))
data_g  <- rbind(data_g1,data_g2) %>% mutate(variable= factor(variable,levels = c("PCH", "PX", "UNR", "RBAL_G_PRIM_VAL")),alternative = factor(alternative, levels = c("ff10","ct1")),label = str_replace_all(alternative,replacement_vector),text=paste("<B>",str_to_upper(alternative),"</B>\n",trad("Year:"),year,"\n",trad("Variation:"),percent(variation,accuracy = 0.01)))

#GDP (in difference from baseline)

graphics_FF10_CT1_2 <- ggplot(data_g, aes(x = year, y = variation)) + 
  geom_line(aes(color=label,group = 1,text = text),size = 0.5) +
  scale_colour_manual(values = lines_palette) +
  labs(x="",y=paste0("% (",trad("in difference from baseline"),")"),color="") + 
  theme(text = element_text(family = 'Arial',size = 12),
        axis.title.y = element_text(size = 10,margin = margin(t = 0, r = 10, b = 0, l = 0)),
        #legend.text = element_text(size = 9),
        legend.position="bottom",
        panel.grid = element_line(color = "grey88",size = 0.4,linetype = 1),
        panel.background=element_rect(fill="white"),
        panel.border = element_rect(linetype = 1, colour = "black",fill = NA,size = 0.7),
       strip.background =element_rect(fill= plot_header,colour = "black",size = 0.7),
        strip.text = element_text(colour = plot_header_text),
        panel.spacing.y = unit(2, "lines"),
        panel.spacing.x = unit(0.5, "lines")
        ) + 
  scale_y_continuous(labels = scales::label_percent(accuracy = 0.1)) +
  facet_wrap(~variable,labeller = labeller(variable = label_macro), scales = "free") + 
  scale_x_continuous(limits = c(startyear,endyear))

graphics_FF10_CT1_2_plotly <- plotly::ggplotly(graphics_FF10_CT1_2, tooltip = "text", dynamicTicks = FALSE,
               width = 875,
               height = 650
               ) %>% 
  layout(showlegend=TRUE,
         dragmode = TRUE,
         margin = list(t=65,r=0,l=100),
         legend = list(orientation = "h", x = 0, y = -0.1)
         #xaxis = list(),
         #yaxis = list()
         #hovermode = "x unified",
         #hoverlabel = list(bgcolor = "#FCF9F0FF", bordercolor = "#ECE5D3FF")
         ) %>% 
  config(displayModeBar=TRUE,displaylogo = FALSE)

graphics_FF10_CT1_2_plotly

```
</center>

## `r "Shocks on fossil fuel price" %>% trad() %>% paste("(FF10 & CT1)")`

<center>
```{r Comparatif 3c, results ='asis',fig.align = 'center'}
label_macro = c(EMS = trad("GHG emissions"))

alternatives_selected = c("ff10","ct1")
label_alternative = trad(c("Fossil fuels price increase","Carbon tax increase"))
replacement_vector <- label_alternative %>% set_names(alternatives_selected)
variables_g1 = c("EMS")
data_g1 <- output %>% filter(variable %in% variables_g1, alternative %in% alternatives_selected) %>% mutate(variation = (shock/baseline-1),variable= factor(variable,levels = c("EMS")),alternative = factor(alternative, levels = c("ff10","ct1")),label = str_replace_all(alternative,replacement_vector),text=paste("<B>",str_to_upper(alternative),"</B>\n",trad("Year:"),year,"\n",trad("Variation:"),percent(variation,accuracy = 0.01)))

#GDP (in difference from baseline)

graphics_FF10_CT1_3 <- ggplot(data_g1, aes(x = year, y = variation)) + 
  geom_line(aes(color=label,group = 1,text = text),size = 0.5) +
  scale_colour_manual(values = lines_palette) +
  labs(x="",y=paste0("% (",trad("in difference from baseline"),")"),color="") + 
  theme(text = element_text(family = 'Arial',size = 12),
        axis.title.y = element_text(size = 10,margin = margin(t = 0, r = 10, b = 0, l = 0)),
        #legend.text = element_text(size = 9),
        legend.position="bottom",
        panel.grid = element_line(color = "grey88",size = 0.4,linetype = 1),
        panel.background=element_rect(fill="white"),
        panel.border = element_rect(linetype = 1, colour = "black",fill = NA,size = 0.7),
       strip.background =element_rect(fill= plot_header,colour = "black",size = 0.7),
        strip.text = element_text(colour = plot_header_text)
        # panel.spacing.y = unit(2, "lines"),
        # panel.spacing.x = unit(0.5, "lines")
        ) + 
  scale_y_continuous(labels = scales::label_percent(accuracy = 0.1)) +
  facet_wrap(~variable,labeller = labeller(variable = label_macro), scales = "free") + 
  scale_x_continuous(limits = c(startyear,endyear))

graphics_FF10_CT1_3_plotly <- plotly::ggplotly(graphics_FF10_CT1_3, tooltip = "text", dynamicTicks = FALSE,
               width = 875,
               height = 650
               ) %>% 
  layout(showlegend=TRUE,
         dragmode = TRUE,
         margin = list(t=65,r=0,l=100),
         legend = list(orientation = "h", x = 0, y = -0.1)
         #xaxis = list(),
         #yaxis = list()
         #hovermode = "x unified",
         #hoverlabel = list(bgcolor = "#FCF9F0FF", bordercolor = "#ECE5D3FF")
         ) %>% 
  config(displayModeBar=TRUE,displaylogo = FALSE)

graphics_FF10_CT1_3_plotly

```
</center>

## `r "Carbon price evolution" %>% trad() %>% paste("(CT1)")`

<center>
```{r Carbon price, results ='asis',fig.align = 'center'}
label_macro = c(RCO2TAX_VOL = trad("Carbon tax increase"))

alternatives_selected = c("ct1")
label_alternative = trad(c("Carbon tax increase"))
replacement_vector <- label_alternative %>% set_names(alternatives_selected)
variables_g1 = c("RCO2TAX_VOL")
data_g1 <- output %>% filter(variable %in% variables_g1, alternative %in% alternatives_selected) %>% mutate(variation = shock,variable= factor(variable,levels = c("RCO2TAX_VOL")),alternative = factor(alternative, levels = c("ct1")),label = str_replace_all(alternative,replacement_vector),text=paste0("<B>",str_to_upper(alternative),"</B>\n",trad("Year:"),year,"\n",trad("Variation:"),round(variation,digits=1)," â‚¬"))

#GDP (in difference from baseline)

graphic_carbon_price_CT1 <- ggplot(data_g1, aes(x = year, y = variation)) + 
  geom_line(aes(color=label,group = 1,text = text),size = 0.5) +
  scale_colour_manual(values = lines_palette) +
  labs(x="",y= paste(trad("Carbon tax price"),"(â‚¬)"),color="") + 
  theme(text = element_text(family = 'Arial',size = 12),
        axis.title.y = element_text(size = 10,margin = margin(t = 0, r = 10, b = 0, l = 0)),
        #legend.text = element_text(size = 9),
        legend.position="bottom",
        panel.grid = element_line(color = "grey88",size = 0.4,linetype = 1),
        panel.background=element_rect(fill="white"),
        panel.border = element_rect(linetype = 1, colour = "black",fill = NA,size = 0.7),
       strip.background =element_rect(fill= plot_header,colour = "black",size = 0.7),
        strip.text = element_text(colour = plot_header_text)
        #panel.spacing.y = unit(2, "lines"),
        #panel.spacing.x = unit(0.5, "lines")
        ) + 
  facet_wrap(~variable,labeller = labeller(variable = label_macro), scales = "free") + 
  scale_x_continuous(limits = c(startyear,endyear))

graphic_carbon_price_CT1_plotly <- plotly::ggplotly(graphic_carbon_price_CT1, tooltip = "text", dynamicTicks = FALSE,
               width = 875,
               height = 650
               ) %>% 
  layout(showlegend=TRUE,
         dragmode = TRUE,
         margin = list(t=65,r=0,l=100),
         legend = list(orientation = "h", x = 0, y = -0.1)
         #xaxis = list(),
         #yaxis = list()
         #hovermode = "x unified",
         #hoverlabel = list(bgcolor = "#FCF9F0FF", bordercolor = "#ECE5D3FF")
         ) %>% 
  config(displayModeBar=TRUE,displaylogo = FALSE)

graphic_carbon_price_CT1_plotly

```
</center>

## `r "Increase in productivity" %>% trad() %>% paste("(PRODK10, PRODE10, PRODL10 & TPF10)")`

<center>
```{r Comparatif 2a, results ='asis',fig.align = 'center'}
label_macro = c(GDP = trad("GDP"), 
                CH = trad("Household consumption"), 
                I = trad("Investment"), 
                RBAL_TRADE_VAL = trad("Trade balance"))

alternatives_selected = c("prodk10","prode10","prodl10","tpf10")
label_alternative = trad(c("Capital productivity","Energy productivity","Labor productivity","Total productivity"))
replacement_vector <- label_alternative %>% set_names(alternatives_selected)
variables_g1 = c("GDP", "CH", "I", "RBAL_TRADE_VAL")
data_g1 <- output %>% filter(variable %in% variables_g1, alternative %in% alternatives_selected) %>% mutate(variation = (shock/baseline-1),variable= factor(variable,levels = c("GDP","CH","I","RBAL_TRADE_VAL")),alternative = factor(alternative, levels = c("prodk10","prode10","prodl10","tpf10")),label = str_replace_all(alternative,replacement_vector),text=paste("<B>",str_to_upper(alternative),"</B>\n",trad("Year:"),year,"\n",trad("Variation:"),percent(variation,accuracy = 0.01)))

graphics_PRODK10_PRODE10_PRODL10_TPF10_1 <- ggplot(data_g1, aes(x = year, y = variation)) + 
  geom_line(aes(color=label,group = 1,text = text),size = 0.5) +
  scale_colour_manual(values = lines_palette) +
  labs(x="",y=paste0("% (",trad("in difference from baseline"),")"),color="") + 
  theme(text = element_text(family = 'Arial',size = 12),
    axis.title.y = element_text(size = 10,margin = margin(t = 0, r = 10, b = 0, l = 0)),
         legend.text = element_text(size = 10),
         legend.position="bottom",
         panel.grid = element_line(color = "grey88",size = 0.4,linetype = 1),
         panel.background=element_rect(fill="white"),
         panel.border = element_rect(linetype = 1, colour = "black",fill = NA,size = 0.7),
        strip.background =element_rect(fill= plot_header,colour = "black",size = 0.7),
         strip.text = element_text(colour = plot_header_text),
         panel.spacing.y = unit(2, "lines"),
         panel.spacing.x = unit(0.5, "lines")
         ) + 
  scale_y_continuous(labels = scales::label_percent(accuracy = 0.1)) +
  facet_wrap(~variable,labeller = labeller(variable = label_macro), scales = "free") +
  scale_x_continuous(limits = c(startyear,endyear))

graphics_PRODK10_PRODE10_PRODL10_TPF10_1_plotly <- plotly::ggplotly(graphics_PRODK10_PRODE10_PRODL10_TPF10_1, tooltip = "text", dynamicTicks = FALSE,
               width = 875,
               height = 650
               ) %>% 
  layout(showlegend=TRUE,
         dragmode = TRUE,
         margin = list(t=65,r=0,l=100),
         legend = list(orientation = "h", x = 0, y = -0.1)
         #xaxis = list(),
         #yaxis = list()
         #hovermode = "x unified",
         #hoverlabel = list(bgcolor = "#FCF9F0FF", bordercolor = "#ECE5D3FF")
         ) %>% 
  config(displayModeBar=TRUE,displaylogo = FALSE)

graphics_PRODK10_PRODE10_PRODL10_TPF10_1_plotly

```
</center>

## `r "Increase in productivity" %>% trad() %>% paste("(PRODK10, PRODE10, PRODL10 & TPF10)")`

<center>
```{r Comparatif 2b, results ='asis',fig.align = 'center'}
label_macro = c(PCH = trad("Consumption price"),
                PX = trad("Production price"),
                UNR = trad("Unemployment rate"),
                RBAL_G_PRIM_VAL = trad("Government primary balance"))

alternatives_selected = c("prodk10","prode10","prodl10","tpf10")
label_alternative = trad(c("Capital productivity","Energy productivity","Labor productivity","Total productivity"))
replacement_vector <- label_alternative %>% set_names(alternatives_selected)
variables_g1 = c("PCH", "PX")
variables_g2 = c("UNR", "RBAL_G_PRIM_VAL")
data_g1 <- output %>% filter(variable %in% variables_g1, alternative %in% alternatives_selected) %>% mutate(variation = (shock/baseline-1))
data_g2 <- output %>% filter(variable %in% variables_g2, alternative %in% alternatives_selected) %>% mutate(variation = (shock-baseline))
data_g  <- rbind(data_g1,data_g2) %>% mutate(variable= factor(variable,levels = c("PCH", "PX", "UNR", "RBAL_G_PRIM_VAL")),alternative = factor(alternative, levels = c("prodk10","prode10","prodl10","tpf10")),label = str_replace_all(alternative,replacement_vector),text=paste("<B>",str_to_upper(alternative),"</B>\n",trad("Year:"),year,"\n",trad("Variation:"),percent(variation,accuracy = 0.01)))

graphics_PRODK10_PRODE10_PRODL10_TPF10_2 <- ggplot(data_g, aes(x = year, y = variation)) + 
  geom_line(aes(color=label,group = 1,text = text),size = 0.5) +
  scale_colour_manual(values = lines_palette) +
  labs(x="",y=paste0("% (",trad("in difference from baseline"),")"),color="") + 
  theme(text = element_text(family = 'Arial',size = 12),
    axis.title.y = element_text(size = 10,margin = margin(t = 0, r = 10, b = 0, l = 0)),
         legend.text = element_text(size = 10),
         legend.position="bottom",
         panel.grid = element_line(color = "grey88",size = 0.4,linetype = 1),
         panel.background=element_rect(fill="white"),
         panel.border = element_rect(linetype = 1, colour = "black",fill = NA,size = 0.7),
        strip.background =element_rect(fill= plot_header,colour = "black",size = 0.7),
         strip.text = element_text(colour = plot_header_text),
         panel.spacing.y = unit(2, "lines"),
         panel.spacing.x = unit(0.5, "lines")
         ) + 
  scale_y_continuous(labels = scales::label_percent(accuracy = 0.1)) +
  facet_wrap(~variable,labeller = labeller(variable = label_macro), scales = "free") +
  scale_x_continuous(limits = c(startyear,endyear))

graphics_PRODK10_PRODE10_PRODL10_TPF10_2_plotly <- plotly::ggplotly(graphics_PRODK10_PRODE10_PRODL10_TPF10_2, tooltip = "text", dynamicTicks = FALSE,
               width = 875,
               height = 650
               ) %>% 
  layout(showlegend=TRUE,
         dragmode = TRUE,
         margin = list(t=65,r=0,l=100),
         legend = list(orientation = "h", x = 0, y = -0.1)
         #xaxis = list(),
         #yaxis = list()
         #hovermode = "x unified",
         #hoverlabel = list(bgcolor = "#FCF9F0FF", bordercolor = "#ECE5D3FF")
         ) %>% 
  config(displayModeBar=TRUE,displaylogo = FALSE)

graphics_PRODK10_PRODE10_PRODL10_TPF10_2_plotly

```

```{r}
save(table_macro_baseline,
     table_macro_CT1,
     table_macro_EXPG1,
     table_macro_EXR10,
     table_macro_FF10,
     table_macro_INCT1,
     table_macro_PRODE10,
     table_macro_PRODK10,
     table_macro_PRODL10,
     table_macro_RRSC1,
     table_macro_TPF10,
     table_macro_VAT1,
     table_macro_WD1,
     graphic_carbon_price_CT1,
     graphic_carbon_price_CT1_plotly,
     graphics_EXR10_WD1_1,
     graphics_EXR10_WD1_1_plotly,
     graphics_EXR10_WD1_2,
     graphics_EXR10_WD1_2_plotly,
     graphics_FF10_CT1_1,
     graphics_FF10_CT1_1_plotly,
     graphics_FF10_CT1_2,
     graphics_FF10_CT1_2_plotly,
     graphics_FF10_CT1_3,
     graphics_FF10_CT1_3_plotly,
     graphics_INCT1_EXPG1_RRSC1_VAT1_1,
     graphics_INCT1_EXPG1_RRSC1_VAT1_1_plotly,
     graphics_INCT1_EXPG1_RRSC1_VAT1_2,
     graphics_INCT1_EXPG1_RRSC1_VAT1_2_plotly,
     graphics_PRODK10_PRODE10_PRODL10_TPF10_1,
     graphics_PRODK10_PRODE10_PRODL10_TPF10_1_plotly,
     graphics_PRODK10_PRODE10_PRODL10_TPF10_2,
     graphics_PRODK10_PRODE10_PRODL10_TPF10_2_plotly,
     
     file = str_c("results/graphs_tables_banks/standard_shocks_",country_name,"_graphics_and_tables.rda")
)
```


</center>